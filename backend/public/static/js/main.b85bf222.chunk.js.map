{"version":3,"sources":["assets/imagenes/EscudoUNAM.png","js/peticionesSO.js","js/URL.js","components/Buscador/Buscador.jsx","components/Header/Header.jsx","components/Navegacion/BotonesNavegacion.jsx","components/Navegacion/Nav.jsx","components/Card/Card.jsx","components/Formulario/Formulario.jsx","components/ListaCards/ListaCards.jsx","components/AlertDelete/AlertDelete.jsx","components/Inicio/Inicio.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","getSO","url","signal","a","fetch","res","json","data","deleteSOMany","list","method","body","JSON","stringify","headers","nombre","postSO","id","URL","process","REACT_APP_API_URL","Buscador","withRouter","props","useState","text","setText","setLista","history","onSubmit","event","then","push","findByName","preventDefault","target","reset","className","type","icon","faSearch","onChange","value","placeholder","Header","header","titulo","logo","src","alt","BotonesNavegacion","comprimido","boton","accion","icono","style","onClick","renderNombre","Nav","setComprimido","movil","setMovil","nav","useRef","listaBotones","botones","useLayoutEffect","window","addEventListener","innerWidth","useEffect","current","width","toggleSize","ref","display","faBars","map","i","key","Card","setSeleccionados","seleccionados","setSistema","setStyleForm","prepared","setPrepared","background","setStyle","so","arquitectura","multiusuario","versionKernel","multitareas","licencia","_id","includes","filter","elemento","faTrash","sty","faEdit","FormularioPost","setData","undefined","handleOnChange","name","handleOnChecked","check","checked","handleOnSubmit","dat","htmlFor","required","maxLength","ListaCards","lista","position","zIndex","sistema","abortController","AbortController","length","d","abort","hideForm","patchSO","AlertDelete","mostrar","setMostrar","estilo","setEstilo","handleQuit","handleDelete","Inicio","color","App","botonEliminar","setbotonEliminar","MostrarAlertEliminar","setMostrarAlertEliminar","faHome","faLaptopCode","faPen","faFileCode","headerData","exact","path","render","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b85bf222.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EscudoUNAM.fcf0c577.png\";","export async function getSO(url, signal) {\r\n   let res = await fetch(`${url}/api/v1/get/so`, {\r\n      signal: signal\r\n   })\r\n   let data = await res.json()\r\n\r\n   return data\r\n\r\n}\r\n\r\nexport async function deleteSO(url, id, signal) {\r\n   await fetch(`${url}/api/v1/delete/sistemasOperativos/individual/${id}`, {\r\n      method: \"DELETE\",\r\n      signal: signal\r\n   })\r\n\r\n}\r\nexport async function deleteSOMany(url,list) {\r\n   await fetch(`${url}/api/v1/delete/sistemasOperativos/multiple`, {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify({\"lista\":list}),\r\n      headers:{\r\n         \"Content-Type\":\"application/json\"\r\n      }\r\n   })\r\n\r\n}\r\nexport async function findByName(url, nombre) {\r\n   let res = await fetch(`${url}/api/v1/get/sistemasOperativos/nombre/${nombre}`)\r\n   let data = await res.json()\r\n\r\n   return data\r\n\r\n\r\n}\r\n\r\nexport async function postSO(url, data) {\r\n   await fetch(`${url}/api/v1/post`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n         \"Content-Type\": \"application/json\"\r\n      }\r\n   })\r\n   return await getSO(url)\r\n\r\n}\r\n\r\nexport async function patchSO(url, data, id) {\r\n   await fetch(`${url}/api/v1/update/${id}`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n         \"Content-type\": \"application/json\"\r\n      }\r\n   })\r\n   return await getSO(url)\r\n}","export const URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\"\r\n","import React, { useState } from 'react';\r\nimport \"./Buscador.scss\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {findByName,getSO} from \"../../js/peticionesSO\";\r\nimport {URL} from \"../../js/URL\"\r\nimport { withRouter } from 'react-router';\r\n\r\nconst Buscador =withRouter( (props) => {\r\n   const [text, setText] = useState(\"\")\r\n\r\n   let {setLista,history}=props;\r\nconst handleOnChange=(event)=>{\r\n   setText(event.target.value);\r\n\r\n\r\n}\r\n\r\nconst handleOnSubmit=(event)=>{\r\n   if(text===\"\"){\r\n      getSO(URL).then(data=>{\r\n         setLista(data)\r\n         history.push(\"/sistemasOperativos\")\r\n      })\r\n   }else{\r\n      findByName(URL,text).then((data)=>{\r\n         setLista(data)\r\n         history.push(\"/sistemasOperativos\")\r\n      })  \r\n   }\r\n    \r\n   event.preventDefault();\r\n   event.target.reset() ;\r\n   setText(\"\")\r\n   \r\n}\r\n\r\n   return (\r\n      <form  onSubmit={handleOnSubmit} className=\"contenedor-buscador\">\r\n         <button  type=\"submit\" ><FontAwesomeIcon icon={faSearch}/></button>\r\n         <input  onChange={handleOnChange}\r\n          placeholder={\"Buscar Sistema Operativo\"} type=\"search\" />\r\n      </form>\r\n   );\r\n});\r\n\r\nexport default Buscador;\r\n","import React from 'react';\r\nimport \"./Header.scss\"\r\nimport Buscador from \"../Buscador\";\r\n\r\n/*Header recibe header como propiedad\r\nque es un objeto\r\ncon logo string,titulo string y\r\nlista botones donde cada boon contiene\r\nicono svg, nombre string, ruta string\r\n*/\r\nconst Header = (props) => {\r\nlet {setLista}=props;\r\nconst {titulo,logo} =props.header;\r\n\r\n\r\n\r\n\r\n   return (\r\n      <header>\r\n         <Buscador setLista={setLista}></Buscador>\r\n         <h1>{titulo}</h1>\r\n         <img src={logo} alt={titulo}/>\r\n      </header>\r\n   );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport \"./BotonesNavegacion.scss\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\nconst BotonesNavegacion = withRouter((props) => {\r\n   const {  comprimido } = props;\r\n   const { accion, nombre, icono,style } = props.boton;\r\n\r\n\r\n   const handleOnClick = () => {\r\n      accion()\r\n   }\r\n   const renderNombre = (comprimido) => {\r\n      if (!comprimido) {\r\n         return (<span>{nombre}</span>);\r\n      }\r\n   }\r\n   return (\r\n      <button style={style} className=\"nav\" onClick={handleOnClick}>\r\n         {renderNombre(comprimido)}\r\n\r\n         {icono}\r\n      </button>\r\n   );\r\n})\r\n\r\nexport default BotonesNavegacion;\r\n","import React, { useState, useRef, useEffect, useLayoutEffect } from 'react';\r\nimport \"./Nav.scss\";\r\nimport BotonesNavegacion from \"./BotonesNavegacion.jsx\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nconst Nav = (props) => {\r\n\r\n   const [comprimido, setComprimido] = useState(true);\r\n   const [movil, setMovil] = useState(false)\r\n   const nav = useRef(null);\r\n   const listaBotones = props.botones;\r\n\r\n\r\n   useLayoutEffect(() => {\r\n      window.addEventListener(\"resize\", () => {\r\n         \r\n         if (window.innerWidth < 800) {\r\n            setMovil(true)\r\n            setComprimido(true)\r\n         } else {\r\n            \r\n               setMovil(false)\r\n            \r\n         }\r\n      })\r\n   })\r\n   useEffect(() => {\r\n\r\n      if (window.innerWidth < 800) {\r\n         nav.current.style.width = \"25vw\"\r\n         setComprimido(true)\r\n         setMovil(true)\r\n      } else {\r\n         if (comprimido) {\r\n            nav.current.style.width = \"5vw\"\r\n\r\n         } else {\r\n            nav.current.style.width = \"15vw\"\r\n\r\n         }\r\n      }\r\n\r\n   }, [comprimido, movil])\r\n   const toggleSize = () => {\r\n\r\n      setComprimido(!comprimido)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <aside id=\"aside\" ref={nav} >\r\n            <nav className=\"escritorio\">\r\n               {!comprimido ? (<h2 onClick={toggleSize}>Dashboard</h2>) : (<h2 style={{ display: !movil ? \"block\" : \"none\" }} onClick={toggleSize}><FontAwesomeIcon icon={faBars} /></h2>)}\r\n\r\n               {listaBotones.map((boton, i) => {\r\n                  return <BotonesNavegacion key={i} boton={boton} comprimido={comprimido} />\r\n               })}\r\n\r\n\r\n            </nav>\r\n         </aside>\r\n\r\n\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect,useLayoutEffect } from 'react';\r\nimport \"./Card.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport default function Card(props) {\r\n    let { setSeleccionados, seleccionados, setSistema, setStyleForm } = props\r\n    const [prepared, setPrepared] = useState(false)\r\n    const [style, setStyle] = useState({ background: \"blue\" })\r\n\r\n    let { nombre, arquitectura, multiusuario, versionKernel, multitareas, licencia, _id } = props.so;\r\n    const handleOnClickDelete = () => {\r\n       \r\n        if (!prepared) {\r\n\r\n            setSeleccionados(list => {\r\n\r\n                return [...list, _id]\r\n\r\n            })\r\n        } else  {\r\n            \r\n            setSeleccionados(  list => {\r\n                return list.filter((elemento)=> elemento!==_id)\r\n\r\n            })\r\n\r\n\r\n        }\r\n        setPrepared(!prepared)\r\n\r\n    }\r\n\r\n\r\n    const handleOnClickPatch = () => {\r\n        setSistema({ ...props.so })\r\n        setStyleForm((sty) => {\r\n            return { ...sty, \"display\": \"block\" }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPrepared(false)\r\n    }, [setPrepared])\r\n\r\n    useLayoutEffect(() => {\r\n        \r\n        if (seleccionados.includes(_id)) {\r\n            setStyle({ background: \"red\" })\r\n\r\n        } else {\r\n            setStyle({ background: \"blue\" })\r\n            setPrepared(false)\r\n        }\r\n\r\n    }, [_id, seleccionados])\r\n\r\n\r\n    return (\r\n\r\n        <li className=\"box\">\r\n            <span style={style}></span>\r\n            <div className=\"content\">\r\n                <h3>{nombre}</h3>\r\n                <p>arquitectura: {arquitectura}</p>\r\n                <p>multiusuario:{multiusuario ? \"si\" : \"no\"}</p>\r\n                <p>version de kernel: {versionKernel}</p>\r\n                <p>multitarea: {multitareas ? \"si\" : \"no\"}</p>\r\n                <h2>{licencia}</h2>\r\n\r\n            </div>\r\n            <button onClick={handleOnClickDelete} className=\"btn-eliminar\"><FontAwesomeIcon icon={faTrash} /></button>\r\n            <button onClick={handleOnClickPatch} className=\"btn-update\"><FontAwesomeIcon icon={faEdit} /></button>\r\n        </li>\r\n\r\n    )\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react';\r\nimport \"./Formulario.scss\";\r\nimport { URL } from \"../../js/URL\";\r\n\r\nconst FormularioPost = (props) => {\r\n   let { setLista, accion,id,so } = props;\r\n\r\n   const [data, setData] = useState(\r\n      {\r\n         nombre: \"\",\r\n         arquitectura: \"\",\r\n         multiusuario: false,\r\n         multitareas: false,\r\n         versionKernel: \"\",\r\n         licencia: \"\"\r\n\r\n\r\n      })\r\n     \r\n   useLayoutEffect(() => {\r\n     if(so!==undefined){\r\n      setData({\r\n         nombre: so.nombre ,\r\n         arquitectura: so.arquitectura  ,\r\n         multiusuario: so.multiusuario ,\r\n         multitareas: so.multitareas,\r\n         versionKernel: so.versionKernel,\r\n         licencia: so.licencia }\r\n      )}\r\n   },[so])\r\n\r\n   const handleOnChange = (event) => {\r\n      let name = event.target.name\r\n      let value = event.target.value\r\n      setData((data) => {\r\n         return { ...data, [name]: value }\r\n      })\r\n      \r\n\r\n   }\r\n   const handleOnChecked = (event) => {\r\n      let check = event.target.checked\r\n      let name = event.target.name\r\n      setData((data) => {\r\n         return { ...data, [name]: check }\r\n      })\r\n\r\n   }\r\n   const handleOnSubmit = async (event) => {\r\n\r\n      event.preventDefault()\r\n      event.target.reset()\r\n\r\n      \r\n      \r\n      let dat = await accion(URL, data,id)\r\n      \r\n      setLista(dat)\r\n      setData(\r\n         {\r\n            nombre:  \"\" ,\r\n            arquitectura: \"\",\r\n            multiusuario: false,\r\n            multitareas: false,\r\n            versionKernel:  \"\",\r\n            licencia:  \"\"\r\n         })\r\n\r\n\r\n   }\r\n\r\n\r\n   return (\r\n      <form onSubmit={handleOnSubmit} className=\"form-post\">\r\n         <div className=\"form-post-container\">\r\n            <span className=\"form-b\"></span>\r\n            <label htmlFor=\"nombre\">Nombre</label>\r\n            <input onChange={handleOnChange} name=\"nombre\" id=\"nombre\" required maxLength={45} type=\"text\"  value={data.nombre} />\r\n\r\n            <label htmlFor=\"arquitectura\">Arquitectura</label>\r\n            <input onChange={handleOnChange} name=\"arquitectura\" id=\"arquitectura\"  maxLength={45} type=\"text\" value={data.arquitectura} />\r\n\r\n            <label htmlFor=\"multitareas\">es multiTarea</label>\r\n            <input onChange={handleOnChecked} name=\"multitareas\" id=\"multitareas\" type=\"checkbox\" checked={data.multitareas?true:false}  />\r\n\r\n            <label htmlFor=\"multiusuario\">es multiusuario</label>\r\n            <input onChange={handleOnChecked} name=\"multiusuario\" id=\"multiusuario\" type=\"checkbox\" value={data.multiusuario} checked={data.multiusuario?true:false} />\r\n\r\n            <label htmlFor=\"licencia\">Licencia</label>\r\n            <input onChange={handleOnChange} name=\"licencia\" id=\"licencia\" maxLength={45} type=\"text\" value={data.licencia} />\r\n            <label htmlFor=\"versionKernel\">kernel</label>\r\n\r\n            <input onChange={handleOnChange} name=\"versionKernel\" id=\"versionKernel\"  maxLength={45} type=\"text\" value={data.versionKernel}  />\r\n            <button type=\"submit\">Aceptar</button>\r\n         </div>\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default FormularioPost;\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"./ListaCards.scss\";\r\nimport Card from \"../Card\";\r\nimport { getSO,patchSO } from \"../../js/peticionesSO\"\r\nimport Formulario from \"../Formulario\"\r\nimport { URL } from \"../../js/URL\"\r\n\r\n\r\nconst ListaCards = (props) => {\r\n\r\n   let { setLista, lista, setSeleccionados, seleccionados } = props;\r\n\r\n   const [style, setStyle] = useState({\r\n      display: \"none\",\r\n      position: \"absolute\",\r\n      width:\"80%\",\r\n      zIndex:\"5\"\r\n\r\n   })\r\n   const [sistema, setSistema] = useState({\r\n      _id:\"\",\r\n      nombre:  \"\",\r\n      arquitectura:  \"\",\r\n      multiusuario: false,\r\n      multitareas:  false,\r\n      versionKernel: \"\",\r\n      licencia:  \"\"})\r\n\r\n   useEffect(() => {\r\n      let abortController = new AbortController()\r\n      let signal = abortController.signal\r\n      let data;\r\n      if (lista.length === 0) {\r\n         getSO(URL, signal).then(d => {\r\n            data = d\r\n            setLista(data)\r\n         })\r\n      }\r\n\r\n      return () => {\r\n         abortController.abort()\r\n      }\r\n   }, [setLista, lista.length]);\r\n\r\n   const hideForm = () => {\r\n      setStyle({ ...style, display: \"none\" })\r\n   }\r\n\r\n\r\n   return (\r\n      <>\r\n         <div style={style}>\r\n            <button className=\"cancel-btn-form\" onClick={hideForm}>X</button>\r\n            <Formulario id={sistema._id} so={sistema} accion={(url,data,id)=>{\r\n               hideForm()\r\n               return patchSO(url,data,id)}} setLista={setLista} />\r\n         </div>\r\n\r\n         <ul>\r\n            {lista.map((so, i) => {\r\n               return (\r\n                  <Card setSistema={setSistema} setStyleForm={setStyle} key={i} so={so} setLista={setLista} seleccionados={seleccionados} setSeleccionados={setSeleccionados} />\r\n               );\r\n            })}\r\n\r\n         </ul>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ListaCards;\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./AlertDelete.scss\";\r\nimport { URL } from \"../../js/URL\";\r\nimport { deleteSOMany, getSO } from \"../../js/peticionesSO\";\r\n\r\n\r\nconst AlertDelete = (props) => {\r\n   let { setSeleccionados, mostrar, seleccionados, setLista, setMostrar } = props;\r\n   const [estilo, setEstilo] = useState({ display: \"none\" })\r\n   const handleQuit = () => {\r\n      setEstilo({ display: \"none\" })\r\n      setSeleccionados([])\r\n      setMostrar(false)\r\n\r\n\r\n   }\r\n   const handleDelete = async () => {\r\n      setMostrar(false)\r\n\r\n      await deleteSOMany(URL,seleccionados)\r\n      \r\n      setSeleccionados([])\r\n      let lista = await getSO(URL)\r\n      setLista(lista)\r\n   }\r\n   useEffect(() => {\r\n      if (mostrar) {\r\n         setEstilo({ display: \"block\" })\r\n      } else {\r\n         setEstilo({ display: \"none\" })\r\n      }\r\n   }, [mostrar])\r\n   return (\r\n      <div style={estilo} onClick={handleQuit} className=\"delete\">\r\n         <div className=\"delete-container\">\r\n            \r\n            {seleccionados.length<=1\r\n            ?<h1>seguro que desea eliminar este elemento?</h1>\r\n            :<h1>seguro que desea eliminar estos {seleccionados.length} elementos?</h1>}\r\n            \r\n            <button className={\"btn-dlt\"} onClick={handleDelete}>aceptar</button>\r\n            <button className={\"btn-acp\"}onClick={handleQuit}> Cancelar</button>\r\n\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default AlertDelete;\r\n","import React from 'react';\r\nimport \"./Inicio.scss\"\r\nconst Inicio = () => {\r\n   return (\r\n      <div className=\"inicio\">\r\n         <h1><font color=\"#efb108\"> SISTEMAS OPERATIVOS </font> </h1>\r\n         <p><font color=\"white\">Es el programa o conjunto de programas que efectúan la gestión de los procesos básicos de un Sistema informático y permite la normal ejecución del\r\n      resto de las operaciones.</font></p>\r\n\r\n         <div >\r\n            <h1><font color=\"white\">Importancia</font></h1>\r\n         </div>\r\n         <p><font color=\"white\">\r\n            La importancia de los Sistemas Operativos nace históricamente desde los años 50's, cuando se hizo evidente que el operar una computadora por medio de tableros enchufables en la primera generación y luego por medio del trabajo en lote en la segunda generación, se podía mejorar notoriamente, pues el operador realizaba siempre una secuencia de pasos repetitivos, lo cual es una de las características contempladas en la definición de lo que es un programa. Es decir, se comenzó a ver que las tareas mismas del operador podían plasmarse en un programa, el cual a través del tiempo y por su enorme complejidad se\r\n            le llamó \"Sistema Operativo\".\r\n          </font></p>\r\n\r\n         <div >\r\n            <h1><font color=\"white\">Generaciones</font></h1>\r\n         </div>\r\n\r\n         <h2><font color=\"white\">Primera generación</font></h2>\r\n         <p><font color=\"white\">Aparecen los sistemas de procesamiento por lotes, donde los trabajos se reunían por grupos o lotes. Cuando se ejecutaba alguna tarea,\r\n         ésta tenía control total de la máquina. Al terminar cada tarea, el control era devuelto al sistema operativo, el cual limpiaba,\r\n      leía e iniciaba la siguiente tarea. Aparece el concepto de nombres de archivo del sistema para lograr independencia de información. </font></p>\r\n\r\n         <h2><font color=\"white\">Segunda generación</font></h2>\r\n         <p><font color=\"white\">En esta generación se desarrollan los sistemas compartidos con multiprogramación, en los cuales se utilizan varios procesadores en un solo sistema, con la finalidad de incrementar el poder de procesamiento de la máquina. El programa especificaba tan sólo que un archivo iba a ser escrito en una unidad de cinta con cierto número de pistas y cierta densidad.</font></p>\r\n\r\n         <h2><font color=\"white\">Tercera generación</font></h2>\r\n         <p><font color=\"white\">Surge la familia de computadores IBM/360 diseñados como sistemas para uso general, por lo que requerían manejar grandes volúmenes de información de distinto tipo, lo cual provocó una nueva evolución de los sistemas operativos: los sistemas de modos múltiples, que soportan simultáneamente procesos por lotes, tiempo compartido, procesamiento en tiempo real y multiprocesamiento.</font></p>\r\n\r\n         <h2><font color=\"white\">Cuarta generación</font></h2>\r\n         <p><font color=\"white\">Los sistemas operativos conocidos en la época actual son los considerados sistemas de cuarta generación. Con la ampliación del uso de redes de computadoras y del procesamiento en línea es posible obtener acceso a computadoras alejadas geográficamente a través de varios tipos de terminales. Con estos sistemas operativos aparece el concepto de máquinas virtuales, en el cual el usuario no se involucra con el hardware de la computadora con la que se quiere conectar y en su lugar el usuario observa una interfaz gráfica creada por el sistema operativo.\r\n  </font></p>\r\n\r\n         <div >\r\n\r\n            <h1><font color=\"white\">Clasificación</font> </h1>\r\n         </div>\r\n         <p><font color=\"white\">\r\n            Debido a la evolución de los sistemas operativos fue necesario realizar una clasificación; considerando las diferencias existentes\r\n            entre sus componentes los podemos clasificar en:\r\n          </font></p>\r\n         <p><font color=\"white\">• Sistemas operativos por lotes.</font></p>\r\n         <p><font color=\"white\">• Sistemas operativos multiprogramación.</font></p>\r\n         <p><font color=\"white\">• Sistemas operativos multiusuario.</font></p>\r\n         <p><font color=\"white\">• Sistemas operativos de tiempo compartido.</font></p>\r\n         <p><font color=\"white\">• Sistemas operativos de tiempo real.</font></p>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Inicio;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"./components/Header\"\r\nimport Nav from \"./components/Navegacion\"\r\nimport logo from \"./assets/imagenes/EscudoUNAM.png\";\r\nimport { faHome, faLaptopCode,  faPen, faFileCode,faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Switch, Route,withRouter } from 'react-router';\r\nimport ListaCards from \"./components/ListaCards\";\r\nimport FormularioPost from \"./components/Formulario\";\r\nimport AlertDelete from \"./components/AlertDelete\"\r\nimport { postSO } from './js/peticionesSO';\r\nimport Inicio from \"./components/Inicio\"\r\n\r\n\r\n\r\n const App=withRouter((props)=> {\r\n  //Botones para navegacion\r\nlet {history}=props;\r\n\r\n\r\n  const [lista, setLista] = useState([])\r\n  const [seleccionados, setSeleccionados] = useState([])\r\n  const [botonEliminar, setbotonEliminar] = useState({display:\"none\"})\r\n  const [MostrarAlertEliminar, setMostrarAlertEliminar] = useState(false);\r\n\r\n  //Botones de navegacion\r\n  let listaBotones = [\r\n    { nombre: \"inicio\", accion: function(){history.push(\"/\") },icono: <FontAwesomeIcon icon={faHome} /> },\r\n    { nombre: \"lista S. operativos\", accion: function(){history.push(\"/sistemasOperativos\")}, icono: <FontAwesomeIcon icon={faLaptopCode} /> },\r\n    { nombre: \"insertar registro\", accion: function(){history.push(\"/insertar\")}, icono: <FontAwesomeIcon icon={faPen} /> },\r\n    { nombre: \"documentacion\", accion: function(){history.push(\"/documentacion\")},icono:<FontAwesomeIcon icon={faFileCode}/> },\r\n    { nombre: \"Eliminar Seleccion\", accion: function(){setMostrarAlertEliminar(true)},icono:<FontAwesomeIcon icon={faTrash}/>,style:botonEliminar }\r\n  ]\r\n\r\n//datos del header\r\n  let headerData = {\r\n    logo: logo,\r\n    titulo: \"S.O REST API\",\r\n\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(seleccionados.length>=1){\r\n      setbotonEliminar({display:\"flex\",\r\n    color:\"#e0245e\"})\r\n    }else{\r\n      setbotonEliminar({display:\"none\"})\r\n    }\r\n\r\n    \r\n  },[seleccionados.length])\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Switch >\r\n        <>\r\n          <AlertDelete setMostrar={setMostrarAlertEliminar} mostrar={MostrarAlertEliminar} setSeleccionados={setSeleccionados} seleccionados={seleccionados} setLista={setLista}/>\r\n          <Header setLista={setLista} header={headerData} />\r\n          <main className=\"grid\">\r\n            <Nav botones={listaBotones} />\r\n            <section>\r\n              <Route exact path=\"/\" render={() => {return(<Inicio/>) }} />\r\n              <Route exact path=\"/sistemasOperativos\" render={() => { return( <ListaCards setLista={setLista} lista={lista}  setSeleccionados={setSeleccionados} seleccionados={seleccionados}/>)}} />\r\n              <Route exact path=\"/insertar\" render={() => {return(<FormularioPost accion={postSO}  setLista={setLista}/>) }} />\r\n              <Route exact path=\"/documentacion\" render={() => { }} />\r\n            </section>\r\n          </main>\r\n\r\n\r\n        </>\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}